[{"H:\\Bootcamp\\wallet-app\\src\\index.js":"1","H:\\Bootcamp\\wallet-app\\src\\App.js":"2","H:\\Bootcamp\\wallet-app\\src\\Contexts\\ListTransContext.js":"3","H:\\Bootcamp\\wallet-app\\src\\Contexts\\ListWalletContext.js":"4","H:\\Bootcamp\\wallet-app\\src\\Main\\Main.js":"5","H:\\Bootcamp\\wallet-app\\src\\NoMain\\NoMain.js":"6","H:\\Bootcamp\\wallet-app\\src\\Components\\TransList.js":"7","H:\\Bootcamp\\wallet-app\\src\\Components\\WalletCards.js":"8","H:\\Bootcamp\\wallet-app\\src\\Components\\TransForm.js":"9","H:\\Bootcamp\\wallet-app\\src\\Components\\Navbar.js":"10","H:\\Bootcamp\\wallet-app\\src\\Components\\CreateWalletForm.js":"11","H:\\Bootcamp\\wallet-app\\src\\Contexts\\IdGeneratorContext.js":"12","H:\\Bootcamp\\wallet-app\\src\\Components\\NavBar.js":"13","H:\\Bootcamp\\wallet-app\\src\\Components\\DeleteModal.js":"14"},{"size":432,"mtime":1611436116883,"results":"15","hashOfConfig":"16"},{"size":1199,"mtime":1611718825829,"results":"17","hashOfConfig":"16"},{"size":863,"mtime":1611732890621,"results":"18","hashOfConfig":"16"},{"size":784,"mtime":1611603672571,"results":"19","hashOfConfig":"16"},{"size":1914,"mtime":1611725489235,"results":"20","hashOfConfig":"16"},{"size":901,"mtime":1611718498620,"results":"21","hashOfConfig":"16"},{"size":2905,"mtime":1611735435862,"results":"22","hashOfConfig":"16"},{"size":2478,"mtime":1611748281325,"results":"23","hashOfConfig":"16"},{"size":3014,"mtime":1611745279516,"results":"24","hashOfConfig":"16"},{"size":1012,"mtime":1611720397355,"results":"25","hashOfConfig":"16"},{"size":3839,"mtime":1611726446739,"results":"26","hashOfConfig":"16"},{"size":420,"mtime":1611595549398,"results":"27","hashOfConfig":"16"},{"size":1099,"mtime":1611626341393,"results":"28","hashOfConfig":"16"},{"size":931,"mtime":1611627380095,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"ij4q6n",{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"H:\\Bootcamp\\wallet-app\\src\\index.js",[],["68","69"],"H:\\Bootcamp\\wallet-app\\src\\App.js",["70","71"],"import React, { useContext } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport ListTransContextProvider from \"./Contexts/ListTransContext\";\nimport ListWalletContextProvider from \"./Contexts/ListWalletContext\";\nimport IdGeneratorContextProvider from \"./Contexts/IdGeneratorContext\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport 'semantic-ui-css/semantic.min.css'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport 'animate.css/animate.css'\nimport \"./App.css\";\n\nimport NoMain from \"./NoMain/NoMain\";\nimport NavBar from \"./Components/Navbar\";\nimport Main from \"./Main/Main\";\n\n\nexport default function App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <ListWalletContextProvider>\n          <ListTransContextProvider>\n            <IdGeneratorContextProvider>\n              <NavBar />\n              <Route exact path=\"/\" component={NoMain} />\n              {/* <Route path=\"/main\" component={Main} /> */}\n\n              <Route path = \"/main/:name\"> <Main/> </Route>\n            </IdGeneratorContextProvider>\n          </ListTransContextProvider>\n        </ListWalletContextProvider>\n      </div>\n    </Router>\n  );\n}\n","H:\\Bootcamp\\wallet-app\\src\\Contexts\\ListTransContext.js",["72","73"],"import React, { createContext, useState } from \"react\";\r\n\r\nexport const ListTransContext = createContext();\r\n\r\nconst ListTransContextProvider = (props) => {\r\n  const [animationChange , setAnimationChange] = useState (\"note-trans-item-flex animate__animated animate__slideInDown\")\r\n  const [TransList, setTransList] = useState([]);\r\n\r\n  const addTrans = (id, walletName, amount,type, note, tags) => {\r\n    id = TransList.length;\r\n    // idWalletTrans =\r\n    setTransList([...TransList, { id, walletName, amount,type, note, tags }]);\r\n  };\r\n\r\n  const removeTrans = (id) => {\r\n    setTransList(TransList.filter((transaction) => transaction.id !== id));\r\n    \r\n  };\r\n  return (\r\n    <ListTransContext.Provider value={{ TransList, addTrans, removeTrans }}>\r\n      {props.children}\r\n    </ListTransContext.Provider>\r\n  );\r\n};\r\nexport default ListTransContextProvider;\r\n","H:\\Bootcamp\\wallet-app\\src\\Contexts\\ListWalletContext.js",[],"H:\\Bootcamp\\wallet-app\\src\\Main\\Main.js",["74"],"import React, { useState, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport TransForm from \"../Components/TransForm\";\r\nimport TransList from \"../Components/TransList\";\r\nimport WalletCards from \"../Components/WalletCards\";\r\nimport { ListWalletContext } from \"../Contexts/ListWalletContext\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowCircleRight } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { Grid, Icon } from \"semantic-ui-react\";\r\nimport \"./main.css\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Main() {\r\n\r\n  const { WalletList } = useContext(ListWalletContext)\r\n  const [glow , setGlow ] = useState(false)\r\n  const glow_card_focus = () =>{\r\n    setGlow(true)\r\n  }\r\n  let { name } = useParams();\r\n  return (\r\n    <>    \r\n    <div className=\"main\" onClick = {glow_card_focus}>\r\n      <Grid>\r\n        <Grid.Row>\r\n          <Grid.Column width={3} className=\"sidebar\">\r\n            <Icon name=\"braille\" color=\"pink\" />\r\n            <span className=\"white\">Wallets</span>\r\n            <div className = \"arrow-card-inline\">\r\n              <FontAwesomeIcon icon = {faArrowCircleRight} className = {glow ? \"showarrow\" : \"hidearrow\"}>hello</FontAwesomeIcon>\r\n              <WalletCards/>\r\n            </div>\r\n            \r\n          </Grid.Column>\r\n          <Grid.Column width={13} className=\"right-side-column\">\r\n            { \r\n              WalletList.filter(wallet => wallet.walletName === name).map((wallet,index) =>{\r\n                <h1 style = {{color:\"white\"}}>{wallet.walletName}</h1>\r\n              })\r\n            }\r\n            {/* <h1>hello</h1> */}\r\n            <div className=\"main-items-right-div\">\r\n              <TransForm />\r\n              <TransList />\r\n              <br />\r\n            </div>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","H:\\Bootcamp\\wallet-app\\src\\NoMain\\NoMain.js",[],"H:\\Bootcamp\\wallet-app\\src\\Components\\TransList.js",["75","76"],"import React, { useContext , useState} from \"react\";\r\nimport { ListTransContext } from \"../Contexts/ListTransContext\";\r\n\r\nimport { useParams } from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrashAlt, faThumbtack} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Icon, Label,Popup } from \"semantic-ui-react\";\r\nimport \"./component.css\";\r\n\r\nexport default function TransList() {\r\n  const { TransList } = useContext(ListTransContext);\r\n  const { removeTrans } = useContext(ListTransContext);\r\n\r\n  const { name } = useParams()\r\n  const [animationChange , setAnimationChange] = useState (\"note-trans-item-flex animate__animated animate__slideInDown animate__faster\" )\r\n\r\n  const handleRemoveTrans = (id) => {\r\n    // \"animate__slideInDown\"\r\n    removeTrans(id);\r\n  };\r\n  const style_popup = {\r\n    borderRadius: 10 + \"px\",\r\n    opacity: 0.7,\r\n  }\r\n  // ondelete animate__slideOutUp\r\n  let allTags = []\r\n\r\n  return (\r\n    <div>\r\n      {TransList.filter( transaction => transaction.walletName === name )\r\n        .map((transaction, i) => {\r\n\r\n          allTags = transaction.tags.split(\",\")\r\n\r\n          return (\r\n            <div className={animationChange}>\r\n              <div className=\"trans-list-div-parent\" id={i}>\r\n                <div className=\"trans-item\">\r\n                  <div>\r\n                    <h3 className=\"trans-amount\">\r\n                      {\r\n                        transaction.type === \"expense\" ? \r\n                         \"- \" + parseInt(transaction.amount) : parseInt(transaction.amount)\r\n                      }\r\n                    </h3>\r\n                    {\r\n                       allTags.map( tag => \r\n                          allTags.length !==0 &&\r\n                          <Label circular color=\"pink\">\r\n                            {tag}\r\n                          </Label>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"trash-icon-pos\">\r\n                    <Popup\r\n                      trigger={<FontAwesomeIcon\r\n                        icon={faTrashAlt}\r\n                        size=\"2x\"\r\n                        onClick={() => handleRemoveTrans(transaction.id)}\r\n                      />}\r\n                      content='delete'\r\n                      inverted\r\n                      style = {style_popup}\r\n                      position='bottom center'\r\n                      size='tiny'\r\n                    />\r\n                    \r\n                  </div>\r\n                </div>\r\n              </div>\r\n            \r\n              \r\n                  <div className=\"note-card shadow-lg p-3 mb-5 rounded \">\r\n                    <FontAwesomeIcon icon = {faThumbtack}/>&nbsp;\r\n                    {transaction.note}\r\n                  </div>\r\n              \r\n              \r\n            </div>\r\n          );\r\n        })}\r\n        {/* } */}\r\n    </div>\r\n  );\r\n}\r\n","H:\\Bootcamp\\wallet-app\\src\\Components\\WalletCards.js",["77","78","79","80","81","82"],"import React, { useContext, useState } from \"react\";\r\nimport { useHistory, Link} from \"react-router-dom\";\r\n\r\nimport { ListWalletContext } from \"../Contexts/ListWalletContext\";\r\nimport { IdGeneratorContext } from \"../Contexts/IdGeneratorContext\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrashAlt, faPen } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Popup, Label } from 'semantic-ui-react'\r\nimport \"./component.css\";\r\n// import DeleteModal from \"./DeleteModal\"\r\n\r\nfunction WalletCards() {\r\n  // const history = useHistory()\r\n  const { WalletList, removeWallet } = useContext(ListWalletContext);\r\n  const { IdGenerator, setIdGenerator } = useContext(IdGeneratorContext);\r\n  \r\n  const handleRemoveWallet = (id) => {\r\n    removeWallet(id);\r\n  }; \r\n  const style_popup = {\r\n    borderRadius: 10 + \"px\",\r\n    opacity: 0.7,\r\n  }\r\n  const colors = [\"#0fbc9e\", \"#8916fe\", \"#ff25c2\"]\r\n  const labelColor = [\"teal\",\"purple\", \"pink\"]\r\n  const changeClassName = (e) => {\r\n    e.currentTarget.classList.add(\"onclickcard\")\r\n  }\r\n  let step = 0;\r\n  \r\n  return (\r\n    <div>\r\n        {WalletList.map((item, index) => {\r\n          \r\n          { step > 1 ? step = 0 : step++ }\r\n          return(\r\n          <Link to = {`/main/${item.walletName}`} style={{ textDecoration: 'none'}} >\r\n            <div\r\n              className=\"walletcard animate__animated animate__slideInDown animate__faster\"\r\n              style = { {backgroundColor : colors[step]} }\r\n              eventKey={index}\r\n              onFocus={changeClassName}\r\n            >\r\n              \r\n            <div className=\"label-trans-numb\">\r\n              <Label circular basic size = \"big\" color = {labelColor[step]}>\r\n                {item.balance} {item.select}\r\n              </Label>\r\n            </div>\r\n\r\n            <div className=\"wallet-name\">{index+1}. {item.walletName} </div>\r\n\r\n            <div className=\"icons-card\">\r\n              <Popup\r\n                trigger={<FontAwesomeIcon\r\n                    icon={faTrashAlt}\r\n                    size=\"xs\"\r\n                    onClick={() => handleRemoveWallet(item.id)}\r\n                  />}\r\n                content='delete'\r\n                inverted\r\n                style = {style_popup}\r\n                position='bottom center'\r\n                size='tiny'\r\n              />\r\n            </div>\r\n            </div>\r\n          </Link>\r\n          \r\n          )})}\r\n     </div>\r\n  );\r\n}\r\n\r\nexport default WalletCards;\r\n","H:\\Bootcamp\\wallet-app\\src\\Components\\TransForm.js",["83","84","85"],"import React, { useState, useContext } from \"react\";\r\nimport { ListTransContext } from \"../Contexts/ListTransContext\";\r\nimport { Button,Input } from 'semantic-ui-react'\r\nimport { useParams } from \"react-router-dom\"\r\n\r\nfunction TransForm() {\r\n  \r\n  const { name } = useParams();\r\n  console.log(name)\r\n\r\n  const { addTrans } = useContext(ListTransContext)\r\n\r\n  const [amount, setAmount] = useState(0);\r\n  const [noteTrans, setNoteTrans] = useState(\"\");\r\n  const [tagTrans, setTagTrans] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [sumTrans, setSumTrans] = useState(0)\r\n\r\n  const handleAmountInput = (e) => {\r\n    setAmount(e.target.value);\r\n  };\r\n  const handleType = (e) =>{\r\n    setType(e.target.value)\r\n  }\r\n  const handleNoteTrans = (e) => {\r\n    setNoteTrans(e.target.value);\r\n  };\r\n  const handleTagTrans = (e) => {\r\n    setTagTrans(e.target.value);\r\n  };\r\n\r\n  \r\n\r\n  const addTransaction = (e) => {\r\n    e.preventDefault();\r\n    addTrans(0, name ,amount,type,noteTrans,tagTrans)\r\n    setAmount(0)\r\n    setNoteTrans(\"\")\r\n    setTagTrans(\"\")\r\n  }\r\n\r\n  // const create_trans_ntf = UIkit.notification(\"...\")\r\n\r\n  return (\r\n    <>    \r\n    <div className = \"trans-form shadow-lg p-3 mb-5 rounded\">\r\n      <h3>Make Transaction : &nbsp;</h3><br/>\r\n\r\n      <div className = \"grid-trans-form\">\r\n        <div className = \"inline-input\">\r\n          {/* add amount - number value */}\r\n          <input type = \"text\" \r\n            className = \"trans-form-inputs trans-form-input-amount\" \r\n            placeholder = \"Add Amount\"\r\n            value = {amount}\r\n            onChange = {handleAmountInput}\r\n            required\r\n            \r\n          />\r\n\r\n          <Button.Group>\r\n            {/* income - expense buttons */}\r\n            <button className=\"btn-color exp-in income\" value=\"income\" onClick={handleType}>\r\n              Income\r\n            </button>\r\n            <Button.Or />\r\n            <button className=\"btn-color exp-in expense\" value=\"expense\" onClick={handleType}>\r\n              Expense\r\n            </button>\r\n          </Button.Group>\r\n        </div>\r\n\r\n        {/* notes & tags inputs*/}\r\n        <div className = \"inline-input\">\r\n          <input type = \"text\" \r\n            className = \"trans-form-inputs trans-form-input-amount\" \r\n            placeholder = \"Some Notes ?..\"\r\n            value = {noteTrans}\r\n            onChange = {handleNoteTrans}\r\n            required\r\n          />\r\n\r\n          <input type = \"text\" \r\n              className = \"trans-form-inputs trans-form-input-amount\" \r\n              placeholder = \"Add Tags ( coma in between )\"\r\n              value = {tagTrans}\r\n              onChange = { handleTagTrans }\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <form onSubmit = {addTransaction} >\r\n            <button className=\"btn-create-trans\"\r\n              type = \"submit\">\r\n              Create Transaction\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\nexport default TransForm;\r\n","H:\\Bootcamp\\wallet-app\\src\\Components\\Navbar.js",["86"],"import React, { useState,createRef } from \"react\";\r\nimport CreatWalletForm from \"./CreateWalletForm\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport \"./component.css\";\r\n\r\nexport default function NavBar() {\r\n  const [modal, setModal] = useState(false);\r\n  const contextRef = createRef()\r\n\r\n  return (\r\n    <div className=\"navBar\">\r\n      <Navbar>\r\n        {/* <Navbar.Toggle /> */}\r\n        <Navbar.Collapse className=\"justify-content-end\">\r\n          {/* <Navbar.Text> */}\r\n              {/* <Rail position='right'> */}\r\n                  <button className=\"btn-color addwallet-fixed\" onClick={() => setModal(true)}>\r\n                    Add wallet\r\n                  </button>\r\n              {/* </Rail> */}\r\n              {/* <Sticky context={contextRef}>\r\n                \r\n              </Sticky> */}\r\n            \r\n            \r\n          {/* </Navbar.Text> */}\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      <CreatWalletForm show={modal} onHide={() => setModal(false)} />\r\n    </div>\r\n  );\r\n}\r\n","H:\\Bootcamp\\wallet-app\\src\\Components\\CreateWalletForm.js",["87","88","89","90"],"import React, { useState, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { ListWalletContext } from \"../Contexts/ListWalletContext\";\r\nimport { IdGeneratorContext } from \"../Contexts/IdGeneratorContext\";\r\n\r\nimport { Select } from \"semantic-ui-react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport \"./component.css\";\r\n\r\nexport default function CreatWalletForm({ show, onHide }) {\r\n  let history = useHistory();\r\n  const { addWallet, WalletList } = useContext(ListWalletContext);\r\n  const { IdGenerator, setIdGenerator } = useContext(IdGeneratorContext);\r\n\r\n  const options = [\r\n    { key: \"$\", value: \"$\", text: \"Dollar $\" },\r\n    { key: \"lbp\", value: \"LBP\", text: \"Lebanese Pound LBP\" }\r\n  ];\r\n  const [walletName, setWalletName] = useState(\"\");\r\n  const [balance, setBalance] = useState(0);\r\n  const [select, setSelect] = useState(\"$\");\r\n\r\n  const handleNameInput = (e) => {\r\n    setWalletName(e.target.value);\r\n  };\r\n  const handleBalance = (e) => {\r\n    setBalance(e.target.value);\r\n  };\r\n  const handleSelect = (e) => {\r\n    setSelect(e.target.value);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    addWallet(3, [], walletName, balance, select);\r\n    setWalletName(\"\")\r\n    setBalance(0)\r\n    setSelect(\"\")\r\n    history.push(\"/main/\" + walletName);\r\n  };\r\n  return (\r\n    <div>\r\n      <Modal\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        show={show}\r\n        onHide={onHide}\r\n        className=\"modal-bg-style\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Your Wallet\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <form onSubmit={onSubmit}>\r\n          <Modal.Body>\r\n            <table className=\"table-form-styling\">\r\n              <tr>\r\n                <td>\r\n                  <span className=\"label-crte-wlt\">\r\n                    <label for=\"name\">Name </label>\r\n                  </span>\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    className=\"crte-wlt-inp-form\"\r\n                    type=\"text\"\r\n                    placeholder=\"Wallet Name ( required ) \"\r\n                    value={walletName}\r\n                    onChange={handleNameInput}\r\n                    required\r\n                  />\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>\r\n                  <span className=\"label-crte-wlt\">\r\n                    <label for=\"balance\">Starting Balance </label>\r\n                  </span>\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    className=\"crte-wlt-inp-form\"\r\n                    type=\"number\"\r\n                    placeholder=\"Optional , if empty then 0\"\r\n                    value={balance}\r\n                    onChange={handleBalance}\r\n                  />\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>\r\n                  <span className=\"label-crte-wlt\">Currency </span>{\" \"}\r\n                </td>\r\n                <td>\r\n                  <Select\r\n                    placeholder=\"Currency\"\r\n                    options={options}\r\n                    value={options.value}\r\n                    onChange={handleSelect}\r\n                    required\r\n                  ></Select>\r\n                </td>\r\n              </tr>\r\n            </table>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            {/* <Link to={`/main/${IdGenerator}`}> */}\r\n            <button className=\"create-wlt-btn-modal\" type=\"submit\" closeButton>\r\n              Create Wallet\r\n            </button>\r\n            {/* </Link> */}\r\n          </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\n// ={`${url}/${product.id}`}\r\n","H:\\Bootcamp\\wallet-app\\src\\Contexts\\IdGeneratorContext.js",[],"H:\\Bootcamp\\wallet-app\\src\\Components\\NavBar.js",["91","92"],"H:\\Bootcamp\\wallet-app\\src\\Components\\DeleteModal.js",[],["93","94"],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":27},{"ruleId":"99","severity":1,"message":"103","line":7,"column":10,"nodeType":"101","messageId":"102","endLine":7,"endColumn":25},{"ruleId":"99","severity":1,"message":"104","line":6,"column":10,"nodeType":"101","messageId":"102","endLine":6,"endColumn":25},{"ruleId":"99","severity":1,"message":"105","line":6,"column":28,"nodeType":"101","messageId":"102","endLine":6,"endColumn":46},{"ruleId":"106","severity":1,"message":"107","line":39,"column":90,"nodeType":"108","messageId":"109","endLine":39,"endColumn":92},{"ruleId":"99","severity":1,"message":"110","line":7,"column":10,"nodeType":"101","messageId":"102","endLine":7,"endColumn":14},{"ruleId":"99","severity":1,"message":"105","line":15,"column":28,"nodeType":"101","messageId":"102","endLine":15,"endColumn":46},{"ruleId":"99","severity":1,"message":"111","line":1,"column":29,"nodeType":"101","messageId":"102","endLine":1,"endColumn":37},{"ruleId":"99","severity":1,"message":"112","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":20},{"ruleId":"99","severity":1,"message":"113","line":8,"column":22,"nodeType":"101","messageId":"102","endLine":8,"endColumn":27},{"ruleId":"99","severity":1,"message":"114","line":16,"column":11,"nodeType":"101","messageId":"102","endLine":16,"endColumn":22},{"ruleId":"99","severity":1,"message":"115","line":16,"column":24,"nodeType":"101","messageId":"102","endLine":16,"endColumn":38},{"ruleId":"116","severity":1,"message":"117","line":36,"column":11,"nodeType":"118","messageId":"119","endLine":36,"endColumn":43},{"ruleId":"99","severity":1,"message":"120","line":3,"column":17,"nodeType":"101","messageId":"102","endLine":3,"endColumn":22},{"ruleId":"99","severity":1,"message":"121","line":17,"column":10,"nodeType":"101","messageId":"102","endLine":17,"endColumn":18},{"ruleId":"99","severity":1,"message":"122","line":17,"column":20,"nodeType":"101","messageId":"102","endLine":17,"endColumn":31},{"ruleId":"99","severity":1,"message":"123","line":8,"column":9,"nodeType":"101","messageId":"102","endLine":8,"endColumn":19},{"ruleId":"99","severity":1,"message":"124","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":14},{"ruleId":"99","severity":1,"message":"125","line":13,"column":22,"nodeType":"101","messageId":"102","endLine":13,"endColumn":32},{"ruleId":"99","severity":1,"message":"114","line":14,"column":11,"nodeType":"101","messageId":"102","endLine":14,"endColumn":22},{"ruleId":"99","severity":1,"message":"115","line":14,"column":24,"nodeType":"101","messageId":"102","endLine":14,"endColumn":38},{"ruleId":"99","severity":1,"message":"100","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":27},{"ruleId":"99","severity":1,"message":"126","line":4,"column":10,"nodeType":"101","messageId":"102","endLine":4,"endColumn":16},{"ruleId":"95","replacedBy":"127"},{"ruleId":"97","replacedBy":"128"},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'FontAwesomeIcon' is defined but never used.","'animationChange' is assigned a value but never used.","'setAnimationChange' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Icon' is defined but never used.","'useState' is defined but never used.","'useHistory' is defined but never used.","'faPen' is defined but never used.","'IdGenerator' is assigned a value but never used.","'setIdGenerator' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Input' is defined but never used.","'sumTrans' is assigned a value but never used.","'setSumTrans' is assigned a value but never used.","'contextRef' is assigned a value but never used.","'Link' is defined but never used.","'WalletList' is assigned a value but never used.","'Button' is defined but never used.",["129"],["130"],"no-global-assign","no-unsafe-negation"]